server:
  port: 8080 #실행할 포트로 설정
spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: notification-service #현재 서비스 이름으로 변경
  datasource:
    #로컬에서 사용할 db로 설정, account 부분을 서비스 이름으로 변경
    url: jdbc:mysql://localhost:3306/petsi_notification?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  flyway:
    enabled: false #dev에서는 편안한 옵션 선택
  jpa:
    database: mysql
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    show-sql: false
    hibernate:
      ddl-auto: none #dev에서는 편안한 옵션 선택
      format_sql: true
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonDeserializer

#swagger : account 부분 서비스로 변경
springdoc:
  swagger-ui:
    path: /api/v1/notification/swagger-ui.html

firebase:
  config:
    path: src/main/resources/firebase/GoogleServiceAccount.json
#
##로그 관련
#logging:
#  level:
#    org.hibernate: DEBUG
#    org.springframework: DEBUG
